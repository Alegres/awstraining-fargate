groups:
  #### Application Microservice Healthcheck
  - name: backend_application_health_metric_absent
    interval: 10s
    rules:
      - alert: backend_application_health_metric_absent
        expr: count(up{cluster_arn=~".+backend-ecs-.+"} > 0) < 1
        for: 1m
        labels:
          priority: "{{ $externalLabels.priorityHigh }}"
          event_id: 80200
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityHigh }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_application_health_metric_absent"
          description: >
            "backend: Microservice is down for more than one minute."

  - name: backend_Spring_Application_Health
    interval: 10s
    rules:
      - alert: backend_Spring_Application_Health_Out_Of_Service
        # if amount of non-healthy pods exceeds 1/3 of all pods we get an alert, includes pods in warning state
        expr: count(up{cluster_arn=~".+backend-ecs-.+"} < 1) / count(up{cluster_arn=~".+backend-ecs-.+"}) > 1/3
        for: 1m
        labels:
          priority: "{{ $externalLabels.priorityHigh }}"
          event_id: 80201
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityHigh }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_Spring_Application_Health_Out_Of_Service"
          description: >
            "backend: More than 1/3 of pods are in unhealthy state.

  #### Spring Heap - Memory Usage Monitoring
  - name: backend_Spring_Free_Heap_Memory
    interval: 10s
    rules:
      - alert: backend_Spring_Free_Heap_Memory_Below_5p_Threshold
        expr: sum(jvm_memory_max_bytes{area="heap"}) != 0 and sum(jvm_memory_max_bytes{area="heap"}) - sum(avg_over_time(jvm_memory_used_bytes{area="heap"}[5m])) <= sum(jvm_memory_max_bytes{area="heap"})*0.05 and sum(jvm_memory_max_bytes{area="heap"}) - sum(avg_over_time(jvm_memory_used_bytes{area="heap"}[5m])) >= sum(jvm_memory_max_bytes{area="heap"})*0.03
        for: 5m
        labels:
          priority: "{{ $externalLabels.priorityMed }}"
          event_id: 80202
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityMed }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_Spring_Free_Heap_Memory_Below_5p_Threshold"
          description: >
            "backend: Free heap memory less than 5%"   

      - alert: backend_Spring_Free_Heap_Memory_Below_3p_Threshold
        expr: sum(jvm_memory_max_bytes{area="heap"}) != 0 and sum(jvm_memory_max_bytes{area="heap"}) - sum(avg_over_time(jvm_memory_used_bytes{area="heap"}[5m])) < sum(jvm_memory_max_bytes{area="heap"})*0.03
        for: 5m
        labels:
          priority: "{{ $externalLabels.priorityHigh }}"
          event_id: 80203
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityHigh }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_Spring_Free_Heap_Memory_Below_3p_Threshold"
          description: >
            "backend: Free heap memory less than 3%" 

  #### Spring GC
  - name: backend_Spring_JVM_Long_Running_GC
    interval: 10s
    rules:
      - alert: backend_Spring_JVM_Long_Running_GC
        expr: irate(jvm_gc_pause_seconds_sum[5m]) > 1
        for: 5m
        labels:
          priority: "{{ $externalLabels.priorityLow }}"
          event_id: 80204
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityLow }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_Spring_JVM_Long_Running_GC"
          description: >
            "backend: At least 1 GC took longer than 1 second within the last 5 minutes"

  - name: backend_Spring_JVM_Frequent_Running_GC
    interval: 10s
    rules:
      - alert: backend_Spring_JVM_Frequent_Running_GC
        expr: irate(jvm_gc_pause_seconds_count[5m]) > 10
        for: 5m
        labels:
          priority: "{{ $externalLabels.priorityLow }}"
          event_id: 80205
        annotations:
          sub_source: "{{ $labels.arn }}"
          summary: >
            "backend: {{ $externalLabels.priorityLow }} - HUB - {{ $externalLabels.HUB }} ; Environment - {{ $externalLabels.ENV }} ; Task name - {{ $labels.task_name }} ; Instance - {{ $labels.instance }} ; ARN - {{ $labels.arn }} - backend_Spring_JVM_Frequent_Running_GC"
          description: >
            "backend: At least 10 GC were executed within the last 5 minutes"